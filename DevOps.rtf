{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20580\viewh12900\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\fs48 DevOps \'97 Development + Operation\
It is a software development approach with the help of which you can develop superior quality software quickly and with more reliability\
\
Before DevOps\
\
\'97 Waterfall Model\
		follows top-down approach\
				1. Requirements \'97 gather and and analysis the requirements\
				2. Design \'97 prepare a blueprint of the software\
				3. Implementations \'97 coding of the application\
				4. Verification \'97 Testing of the application\
				5. Maintenance \'97 application is monitored for performance\
\'97 Agile\
	The software project is broken down into various iterations or sprints\
	each sprint has duration of 2-8 weeks\
\
Stage 1 \'97 Continuous Development\
Tools Used : Git, SVN, Mercurial, CVS\
This is the phase that involves \'91planning and coding\'92\
The process of maintaining the code is known as SCM (Source Code Management)\
Stage 2 \'97 Continuous Integration  (CI)\
Tools : Jenkins, TeamCity, Travis\
It is a practice in which developers require to commit changes to the source code more frequently. This may be either on a daily or weekly basis\
Stage 3 - Continuous Testing \
Tools : Jenkins, Selenium TestNg, JUnit\
You test the developed software continuously for bugs using automation testing tools\
Stage 4:Continuous Deployment (CD)\
Tools:\
Configuration Management : Chef, Puppet, Ansible\
It is the act of releasing deployments to servers, scheduling updates on all servers and most importantly keeping the configuration consistent across all the servers\
Containerisation : Docker, Vagrant\
It helps to produce consistency across development, test, staging as well as production environments\
Stage 5: Continuous Monitoring\
Tools : Splunk, ELK Stack, Nagios, New Relic\
You continuously monitoring the performance of your application\
\
Stage 1 \'97Version Control\
			\'97 Maintain different versions of the code\
			\'97 Source code Management\
Stage 2 \'97 Continuous Integration\
			\'97 Compile, validate, code review, unit testing, integration testing\
			\'97 Continuous Build\
Stage 3 \'97 Continuous Delivery\
			\'97 Deploying the build application to test servers, performing UAT\
			\'97 Continuous Testing\
Stage 4 \'97 Continuous Deployment\
			\'97 Deploying the tested application on the prod server for releases\
			\'97 Configuration management and containerisation\
Stage 5 \'97 continuous Monitoring\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}